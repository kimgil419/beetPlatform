<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ProjectDAO">

	<select id="getProject_idx" parameterType="project" resultType="int">
		SELECT PROJECT_IDX FROM PROJECT_VIEW
		 WHERE PROJECT_MANAGER=#{project_manager}
		   AND PROJECT_REG_DATE=(SELECT MAX(PROJECT_REG_DATE) FROM PROJECT_VIEW
		                          WHERE PROJECT_MANAGER=#{project_manager}
		                         )
	</select>

	<select id="getProject_manager" parameterType="project" resultType="string">
		SELECT USER_ID FROM USER
	</select>

	<select id="getTotalPost" parameterType="pages" resultType="int">
 		SELECT COUNT(PROJECT_IDX) AS TOTALPOST FROM PROJECT_VIEW
		<choose>
		<when test="searchCondition == 'project_name' ">
		 WHERE PROJECT_NAME LIKE CONCAT('%', #{searchKeyword}, '%')
		</when>
		<when test="searchCondition == 'project_manager' ">
		 WHERE PROJECT_MANAGER
		    IN (SELECT USER_ID FROM USER_DB
		       	 WHERE USER_NAME LIKE CONCAT('%', #{searchKeyword}, '%')
		       )
		</when>
		<when test="searchCondition == 'project_progress' ">
		 WHERE PROJECT_PROGRESS LIKE CONCAT('%', #{searchKeyword}, '%')
		</when>
		</choose>
	</select>
	
	<select id="getProjectList" parameterType="pages" resultType="project">
		SELECT PV.PROJECT_IDX, PV.PROJECT_NAME, PV.PROJECT_CONTRACTOR, PV.PROJECT_CONTRACT_AMOUNT
			, PV.PROJECT_PROGRESS, DATE_FORMAT(PV.PROJECT_REG_DATE, '%y/%m/%d') AS PROJECT_REG_DATE
			, DATE_FORMAT(PV.PROJECT_START_DATE, '%y/%m/%d') AS PROJECT_START_DATE
			, DATE_FORMAT(PV.PROJECT_END_DATE, '%y/%m/%d') AS PROJECT_END_DATE
			, UD.USER_NAME, DATEDIFF(PV.PROJECT_END_DATE, PV.PROJECT_START_DATE) AS PROJECT_PERIOD
			, DATEDIFF(PV.PROJECT_END_DATE, CURDATE()) AS PROJECT_DEADLINE
			, TRUNCATE((1- DATEDIFF(PV.PROJECT_END_DATE, CURDATE()) / DATEDIFF(PV.PROJECT_END_DATE, PV.PROJECT_START_DATE)) * 100, 0) AS PERCENTAGE
		<choose>
		<when test="searchCondition == 'project_name' ">
		  FROM (
				SELECT *
				  FROM PROJECT_VIEW
				 WHERE PROJECT_NAME LIKE CONCAT('%', #{searchKeyword}, '%')
		  		) AS PV
		</when>
		<when test="searchCondition == 'project_manager' ">
		  FROM (
				SELECT *
				  FROM PROJECT_VIEW
				 WHERE PROJECT_MANAGER
				    IN (SELECT USER_ID
				          FROM USER_DB
				         WHERE USER_NAME LIKE CONCAT('%', #{searchKeyword}, '%')
				       )
		       ) AS PV
		</when>
		<when test="searchCondition == 'project_progress' ">
		  FROM (
		        SELECT *
		          FROM PROJECT_VIEW
		         WHERE PROJECT_PROGRESS LIKE CONCAT('%', #{searchKeyword}, '%')
		       ) AS PV
		</when>
		<otherwise>
		  FROM PROJECT_VIEW AS PV
		</otherwise>
		</choose>
		  LEFT OUTER JOIN USER_DB AS UD
		    ON PV.PROJECT_MANAGER = UD.USER_ID
		 ORDER BY PROJECT_IDX DESC LIMIT #{startPost}, #{viewPost}
	</select>
	
	<select id="getProject" parameterType="project" resultType="project">
		SELECT PV.*, UD.USER_NAME
		  FROM PROJECT_VIEW AS PV, USER_DB AS UD
		 WHERE PROJECT_IDX = #{project_idx}
		   AND PV.PROJECT_MANAGER = UD.USER_ID 
	</select>
	
	<select id="getSourceList" parameterType="project" resultType="source">
		SELECT PS.*, UD.USER_NAME
		  FROM PROJECT_SOURCE AS PS, USER_DB AS UD
		 WHERE PROJECT_IDX=#{project_idx}
		   AND PS.USER_ID = UD.USER_ID
	</select>
	
	<select id="getSource" parameterType="source" resultType="source">
		SELECT PS.*, UD.USER_NAME
		  FROM PROJECT_SOURCE AS PS, USER_DB AS UD
		 WHERE SOURCE_IDX=#{source_idx}
		   AND PS.USER_ID = UD.USER_ID
	</select>
	
	<select id="getManager" parameterType="project" resultType="project">
		SELECT * FROM PROJECT_VIEW
		 WHERE PROJECT_MANAGER=#{project_manager}
	</select>
	
	<delete id="deleteProject" parameterType="project">
		DELETE FROM PROJECT_VIEW
		 WHERE PROJECT_IDX=#{project_idx}
	</delete>

	<insert id="insertProject" parameterType="project">
		INSERT INTO PROJECT_VIEW
		VALUES (DEFAULT, #{project_name}, #{project_contractor}, #{project_contract_amount}, 
			   #{project_progress}, DEFAULT, #{project_start_date}, #{project_end_date},
			   #{project_manager}
			   )
	</insert>
	
	<insert id="insertSource" parameterType="source">
		INSERT INTO PROJECT_SOURCE
			   (PROJECT_IDX, SOURCE_IDX, USER_ID, SOURCE_NAME, SOURCE_PROGRESS)
		VALUES (#{project_idx}, DEFAULT, #{user_id}, #{source_name}, #{source_progress})
	</insert>
	
	<insert id="insertFunction" parameterType="source">
		INSERT INTO PROJECT_SOURCE
			   (PROJECT_IDX, SOURCE_IDX, USER_ID, SOURCE_NAME, SOURCE_PROGRESS)
		VALUES (#{project_idx}, DEFAULT, #{user_id}, #{source_name}, #{source_progress})
	</insert>
	
	<update id="updateProject" parameterType="project">
		UPDATE PROJECT_VIEW
		   SET PROJECT_CONTRACTOR=#{project_contractor}, PROJECT_NAME=#{project_name}, PROJECT_CONTRACT_AMOUNT=#{project_contract_amount},
		   	   PROJECT_START_DATE=#{project_start_date}, PROJECT_END_DATE=#{project_end_date}, PROJECT_MANAGER=#{project_manager},
		   	   PROJECT_PROGRESS=#{project_progress}
		 WHERE PROJECT_IDX=#{project_idx}
	</update>
	
	<update id="updateSource" parameterType="source">
		UPDATE PROJECT_SOURCE
		<choose>
		<when test="source_code == null">
		   SET
		</when>
		<otherwise>
		   SET SOURCE_CODE=#{source_code},
		</otherwise>
		</choose>
			   SOURCE_NAME=#{source_name}, SOURCE_PROGRESS=#{source_progress}, USER_ID=#{user_id}
		 WHERE SOURCE_IDX=#{source_idx}
	</update>
	
	<delete id="deleteSource" parameterType="source">
		DELETE 
		  FROM PROJECT_SOURCE
		 WHERE SOURCE_IDX=#{source_idx}
	</delete>
	
	<select id="getSource_idxList" parameterType="project" resultType="int">
		SELECT SOURCE_IDX
		  FROM PROJECT_SOURCE
		 WHERE PROJECT_IDX=#{project_idx}
	</select>
	
</mapper>