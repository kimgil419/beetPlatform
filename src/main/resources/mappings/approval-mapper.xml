<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- mapper 태그의 namespace 속성 필수 작성 -->
<mapper namespace="ApprovalDAO">
	
	<select id="getApproval"  parameterType="approval" resultType="approval">
	SELECT * 
	 , (SELECT USER_NAME FROM USER_DB WHERE USER_ID = A.USER_ID) AS USER_NAME
	 , (SELECT USER_NAME FROM USER_DB WHERE USER_ID = A.APPROVAL_ID_A) AS USER_NAME1
	 , (SELECT USER_NAME FROM USER_DB WHERE USER_ID = A.APPROVAL_ID_B) AS USER_NAME2
	 , (SELECT USER_NAME FROM USER_DB WHERE USER_ID = A.APPROVAL_ID_C) AS USER_NAME3
	FROM APPROVAL A WHERE A.A_NUM = #{a_num}
	</select>
	
	<select id="getApprovalList" parameterType="approval" resultType="approval">
	 SELECT *
	 , (SELECT USER_NAME FROM USER_DB WHERE USER_ID = A.USER_ID) AS USER_NAME
	 , (SELECT USER_NAME FROM USER_DB WHERE USER_ID = A.APPROVAL_ID_A) AS USER_NAME1
	 , (SELECT USER_NAME FROM USER_DB WHERE USER_ID = A.APPROVAL_ID_B) AS USER_NAME2
	 , (SELECT USER_NAME FROM USER_DB WHERE USER_ID = A.APPROVAL_ID_C) AS USER_NAME3
	  FROM APPROVAL A
	 
	</select>
	<select id="getApprovalListMainSerial" parameterType="approval" resultType="approval">
	 SELECT * 
	  FROM APPROVAL
	  WHERE OPTION = 0
       AND ((APPROVAL_ID_A = #{user_id} AND FIRST_APPROVAL IS NULL)
		OR (APPROVAL_ID_B = #{user_id} AND FIRST_APPROVAL IS NOT NULL AND SECOND_APPROVAL IS NULL)
		OR (APPROVAL_ID_C = #{user_id} AND FIRST_APPROVAL IS NOT NULL AND SECOND_APPROVAL IS NOT NULL AND THIRD_APPROVAL IS NULL))
	  
	  ORDER BY A_NUM DESC LIMIT 0, 3
	</select>
	<select id="getApprovalListMainParallel" parameterType="approval" resultType="approval">
	 SELECT * 
	  FROM APPROVAL
	  WHERE OPTION = 1
	   AND ((APPROVAL_ID_A = #{user_id} AND FIRST_APPROVAL IS NULL)
		OR (APPROVAL_ID_B = #{user_id} AND SECOND_APPROVAL IS NULL)
		OR (APPROVAL_ID_C = #{user_id} AND THIRD_APPROVAL IS NULL))
	  
	  ORDER BY A_NUM DESC LIMIT 0, 3
	</select>
	<select id="getApprovalListDone" parameterType="apages" resultType="approval">
		SELECT * 
	 , (SELECT USER_NAME FROM USER_DB WHERE USER_ID = A.USER_ID) AS USER_NAME
	 , (SELECT USER_NAME FROM USER_DB WHERE USER_ID = A.APROVAL_ID_A) AS USER_NAME1
	 , (SELECT USER_NAME FROM USER_DB WHERE USER_ID = A.APPROVAL_ID_B) AS USER_NAME2
	 , (SELECT USER_NAME FROM USER_DB WHERE USER_ID = A.APPROVAL_ID_C) AS USER_NAME3
		FROM APPROVAL A		 
		WHERE ((A.APPROVAL_ID_A = #{user_id} AND A.FIRST_APPROVAL IS NOT NULL) 
		 OR (A.APPROVAL_ID_B = #{user_id} AND A.SECOND_APPROVAL IS NOT NULL)
		 OR (A.APPROVAL_ID_C = #{user_id} AND A.THIRD_APPROVAL IS NOT NULL))
		<choose>
		<when test="searchCondition == 'a_title' ">
				AND A.A_TITLE LIKE CONCAT('%', #{searchKeyword}, '%')	  		
		</when>
		<when test="searchCondition == 'a_content' ">
				AND A.A_CONTENT LIKE CONCAT('%', #{searchKeyword}, '%')		
		</when>		
		</choose> 
		 ORDER BY A.A_NUM DESC LIMIT #{startPost}, #{viewPost}	 
	</select>
	<select id="getApprovalListMy" parameterType="apages" resultType="approval">
		SELECT * 
		 , (SELECT USER_NAME FROM USER_DB WHERE USER_ID = A.USER_ID) AS USER_NAME
	 , (SELECT USER_NAME FROM USER_DB WHERE USER_ID = A.APPROVAL_ID_A) AS USER_NAME1
	 , (SELECT USER_NAME FROM USER_DB WHERE USER_ID = A.APPROVAL_ID_B) AS USER_NAME2
	 , (SELECT USER_NAME FROM USER_DB WHERE USER_ID = A.APPROVAL_ID_C) AS USER_NAME3
		 FROM APPROVAL A
		WHERE A.USER_ID = #{user_id}
		<choose>
		<when test="searchCondition == 'a_title' ">
				AND A.A_TITLE LIKE CONCAT('%', #{searchKeyword}, '%')	  		
		</when>
		<when test="searchCondition == 'a_content' ">
				AND A.A_CONTENT LIKE CONCAT('%', #{searchKeyword}, '%')	  		
		</when>	
		</choose>
		 
		 ORDER BY A.A_NUM DESC LIMIT #{startPost}, #{viewPost}
	</select>
	
	<select id="getTotalPostDone" parameterType="apages" resultType="int">
 		SELECT COUNT(A_NUM) AS TOTALPOST FROM APPROVAL
 		WHERE (APPROVAL_ID_A = #{user_id} AND FIRST_APPROVAL IS NOT NULL) 
		 OR (APPROVAL_ID_B = #{user_id} AND SECOND_APPROVAL IS NOT NULL)
		 OR (APPROVAL_ID_C = #{user_id} AND THIRD_APPROVAL IS NOT NULL) 
		<choose>
		<when test="searchCondition == 'a_title' ">
		AND A_TITLE LIKE CONCAT('%', #{searchKeyword}, '%')
		</when>		
		<when test="searchCondition == 'a_content' ">
		 AND A_CONTENT LIKE CONCAT('%', #{searchKeyword}, '%')
		</when>
		</choose>
	</select>
	<select id="getTotalPostMy" parameterType="apages" resultType="int">
 		SELECT COUNT(A_NUM) AS TOTALPOST FROM APPROVAL
 		WHERE USER_ID = #{user_id}
		<choose>
		<when test="searchCondition == 'a_title' ">
		 AND A_TITLE LIKE CONCAT('%', #{searchKeyword}, '%')
		</when>		
		<when test="searchCondition == 'a_content' ">
		 AND A_CONTENT LIKE CONCAT('%', #{searchKeyword}, '%')
		</when>
		</choose>
	</select>
	
	
	<insert id="insertApproval" parameterType="approval">
	INSERT INTO APPROVAL VALUES (NULL, #{user_id}, #{a_title}, 
	 #{a_content}, #{approval_id_a}, #{approval_id_b},  #{approval_id_c}, #{option},
	NULL, NULL, NULL, NOW(), #{urgent}, NULL)
	</insert>
	
	<update id="updateApproval" parameterType="approval">
	UPDATE APPROVAL SET
	        A_CONTENT = #{a_content},
			FIRST_APPROVAL = #{first_approval},	
			SECOND_APPROVAL = #{second_approval},
			THIRD_APPROVAL = #{third_approval}
		WHERE A_NUM = #{a_num}
	</update>
	<update id="refuseApproval" parameterType="approval">
	UPDATE APPROVAL SET
	        A_CONTENT = #{a_content},
			FIRST_APPROVAL = NULL,
			SECOND_APPROVAL = NULL,
			THIRD_APPROVAL = NULL,
			REFUSE = '1'
		WHERE A_NUM = #{a_num}
	</update>

	<delete id="deleteApproval" parameterType="approval">
	DELETE FROM APPROVAL WHERE A_NUM = #{a_num} 
	</delete>

</mapper>




